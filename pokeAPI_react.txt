import React, { useState, useEffect } from 'react';
import { NavigationContainer } from '@react-navigation/native';
import { createNativeStackNavigator } from '@react-navigation/native-stack';
import { View, Text, FlatList, Image, StyleSheet, Button } from 'react-native';

const Stack = createNativeStackNavigator();

const HomeScreen = ({ navigation }) => {
  const [pokemonList, setPokemonList] = useState([]);
  
  useEffect(() => {
    async function fetchAllPokemon() {
      const limit = 100; // Número de Pokémon por requisição
      const total = 898; // Total de Pokémon até a 8ª geração
      const pokemonList = [];

      // Loop para buscar todos os Pokémon em lotes de 100 para agilizar a exibiçao
      for (let offset = 0; offset < total; offset += limit) {
        const url = `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`;
        try {
          const response = await fetch(url);
          const data = await response.json();
          pokemonList.push(...data.results);
        } catch (error) {
          console.error('Failed to fetch Pokémon list:', error);
        }
      }

      // Ordena a lista de Pokémon por nome
      const sortedPokemonList = pokemonList.sort((a, b) => a.name.localeCompare(b.name));
      setPokemonList(sortedPokemonList);
    }
    
    fetchAllPokemon();
  }, []);
  
  return (
    <View style={styles.container}>
      <FlatList
        data={pokemonList}
        keyExtractor={(item) => item.name}
        numColumns={2} // Exibe 2 pokémons por linha
        renderItem={({ item }) => (
          <View style={styles.pokemonContainer}>
            <Text style={styles.name}>{item.name.charAt(0).toUpperCase() + item.name.slice(1)}</Text>
            <Image 
          source={{ uri: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${item.url.split("/")[6]}.png` }} 
              style={styles.image} 
            />
            <Button
              color="#ADD8E6"
              title="Ver Detalhes"
              onPress={() => navigation.navigate('Details', { pokemon: item })}
            />
          </View>
        )}
      />
    </View>
  );
};

const DetailsScreen = ({ route }) => {
  const { pokemon } = route.params;
  const [pokemonDetails, setPokemonDetails] = useState(null);

  useEffect(() => {
    async function fetchPokemonDetails() {
      const url = `https://pokeapi.co/api/v2/pokemon/${pokemon.name}`;
      try {
        const response = await fetch(url);
        const data = await response.json();
        setPokemonDetails(data);
      } catch (error) {
        console.error('Failed to fetch Pokémon details:', error);
      }
    }
    
    fetchPokemonDetails();
  }, [pokemon]);

  if (!pokemonDetails) {
    return (
      <View style={styles.container}>
        <Text>Carregando detalhes...</Text>
      </View>
    );
  }

  return (
    <View style={styles.container}>
      <Text style={styles.name}>{pokemonDetails.name.charAt(0).toUpperCase() + pokemonDetails.name.slice(1)}</Text>
      <Image 
        source={{ uri: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pokemonDetails.id}.png` }} 
        style={styles.image} 
      />
      <View style={styles.detailscont}>
        <Text style={styles.detailsText}><strong>ID:</strong> {pokemonDetails.id}</Text>
        <Text style={styles.detailsText}><strong>Tipo:</strong> {pokemonDetails.types.map(type => type.type.name).join(', ')}</Text>
        <Text style={styles.detailsText}><strong>Altura:</strong> {pokemonDetails.height / 10} m</Text>
        <Text style={styles.detailsText}><strong>Peso:</strong> {pokemonDetails.weight / 10} kg</Text>
        <Text style={styles.detailsText}><strong>Habilidades:</strong> {pokemonDetails.abilities.map(ability => ability.ability.name).join(', ')}</Text>
        <Text style={styles.detailsText}><strong>Stats:</strong></Text>
        <FlatList
          data={pokemonDetails.stats}
          keyExtractor={(item) => item.stat.name}
          renderItem={({ item }) => (
            <Text style={styles.detailsText}>{item.stat.name}: {item.base_stat}</Text>
          )}
        />
      </View>
    </View>
  );
};

export default function App() {
  return (
    <NavigationContainer initialRouteName="Home">
      <Stack.Navigator>
        <Stack.Screen name="Home" component={HomeScreen} options={{ title: 'Catálogo de Pokémon' }} />
        <Stack.Screen name="Details" component={DetailsScreen} options={{ title: 'Detalhes do Pokémon' }} />
      </Stack.Navigator>
    </NavigationContainer>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#ADD8E6',
    paddingTop: 20,
    paddingHorizontal: 16,
  },
  pokemonContainer: {
    flex: 1,
    padding: 10,
    marginVertical: 8,
    marginHorizontal: 8, 
    backgroundColor: '#00008B',
    borderRadius: 10,
    alignItems: 'center',
    marginBottom: 20, 
  },
  image: {
    alignSelf: 'center',
    width: 100,
    height: 100,
    marginBottom: 10,
  },
  name: {
    color: '#F8F8FF',
    alignSelf: 'center',
    fontSize: 15,
    fontWeight: 'bold',
  },
  detailscont: {
    width: 300,
    height: 'auto',
    backgroundColor:'#00008B',
    borderRadius: 10,
    alignSelf: 'center',
  },
  detailsText: {
    paddingTop: '5px',
    fontSize: 14,
    color: '#F8F8FF',
    marginVertical: 4,
    alignSelf: 'center',
  },
});
